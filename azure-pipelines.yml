trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
# Step 1: Install .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# Step 2: Restore and Build the project
- script: |
    current_folder='ind-tableau-alert-dashboard-risk-queue'
    project_path="$current_folder/$current_folder.csproj"
    dotnet restore $project_path
    dotnet build $project_path --configuration Release
  displayName: 'Restore and Build'

# Step 3: Run Tests and Collect Coverage
- script: |
    test_folder='ind-tableau-alert-dashboard-risk-queue-unittest'
    test_project_path="$test_folder/$test_folder.csproj"
    results_directory="$(System.DefaultWorkingDirectory)/TestResults"
    dotnet test $test_project_path --configuration Release --collect:"XPlat Code Coverage" --results-directory $results_directory
  displayName: 'Run Tests and Collect Coverage'

# Step 4: List Directory Contents for Debugging
- script: |
    echo "Listing contents of $(System.DefaultWorkingDirectory):"
    ls -R $(System.DefaultWorkingDirectory)
  displayName: 'List Directory Contents'

# Step 5: Publish Code Coverage Results
- task: PublishCodeCoverageResults@2
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/TestResults/**/coverage.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/CodeCoverage'
    failIfCoverageEmpty: true

# Step 6: Download and Initialize CodeQL
- script: |
    wget https://github.com/github/codeql/archive/refs/heads/main.zip -O codeql.zip
    unzip codeql.zip -d codeql
    cd codeql/codeql-main
    # Initialize CodeQL C# queries
    cp -r csharp/ql $(System.DefaultWorkingDirectory)/codeql-queries
  displayName: 'Download and Initialize CodeQL'

# Step 7: Install CodeQL Pack Dependencies
- script: |
    cd $(System.DefaultWorkingDirectory)/codeql-queries
    ./codeql/codeql pack install
  displayName: 'Install CodeQL Pack Dependencies'

# Step 8: Analyze with CodeQL
- script: |
    ./codeql/codeql database create codeql-db --language=csharp --source-root=.
    ./codeql/codeql database analyze codeql-db --format=sarif-latest --output=codeql-results.sarif
  displayName: 'Analyze with CodeQL'
