# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
steps:

- script: |
    echo "Installing CodeQL CLI..."
    curl -LO https://github.com/github/codeql-cli-binaries/releases/download/v2.20.1/codeql-win64.zip
    mkdir codeql
    tar -xf codeql-win64.zip -C codeql
    echo "##vso[task.setvariable variable=CODEQL_PATH]$(System.DefaultWorkingDirectory)\codeql\codeql"
    echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)\codeql\codeql;%PATH%"
  displayName: 'Install CodeQL CLI'

- script: |
    echo "Installing CodeQL Bundle"
    curl -LO https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.20.1/codeql-bundle-win64.tar.gz
    tar -xf codeql-bundle-win64.tar.gz -C codeql
    echo "##vso[task.setvariable variable=CODEQL_PATH]$(System.DefaultWorkingDirectory)\codeql\codeql"
    echo "##vso[task.setvariable variable=PATH]$(System.DefaultWorkingDirectory)\codeql\codeql;%PATH%"
  displayName: 'Install codeql-bundle'
- script: |
    codeql database create $(System.DefaultWorkingDirectory)/db --language=csharp
  displayName: 'Create CodeQL Database'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- script: |
    codeql database analyze $(System.DefaultWorkingDirectory)/db --format=sarif-latest --output=$(Build.ArtifactStagingDirectory)/results.sarif (System.DefaultWorkingDirectory)/qlpacks/codeql/csharp-queries/codeql-suites/csharp-code-scanning.qls
  displayName: 'Analyze CodeQL Database'